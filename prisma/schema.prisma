generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ExerciseType {
  id          String        @id @default(uuid())
  slug        String        @unique // computer-friendly name, e.g. "technique", "backhand"
  parentId    String?       // null for root level types
  parent      ExerciseType? @relation("ExerciseTypeHierarchy", fields: [parentId], references: [id])
  children    ExerciseType[] @relation("ExerciseTypeHierarchy")
  translations ExerciseTypeTranslation[]
  exercises    Exercise[]
  sectionLinks SectionExerciseType[]
  groupMemberships ExerciseTypeGroupMember[]
  sessionItems PracticeSessionSectionItem[]
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")

  @@map("exercise_types")
  @@index([parentId])
}

model ExerciseTypeTranslation {
  id            String       @id @default(uuid())
  exerciseType  ExerciseType @relation(fields: [exerciseTypeId], references: [id], onDelete: Cascade)
  exerciseTypeId String      @map("exercise_type_id")
  language      String       // e.g. "fi", "en", "sv"
  name          String       // translated name
  description   String?      // optional description in the given language
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  @@map("exercise_type_translations")
  @@unique([exerciseTypeId, language])
  @@index([language])
}

model Exercise {
  id            String       @id @default(uuid())
  slug          String       @unique
  name          String
  description   String?
  content       String
  image         String?      // path to uploaded image
  youtubeVideo  String?     @map("youtube_video")
  duration      Int
  exerciseType  ExerciseType @relation(fields: [exerciseTypeId], references: [id])
  exerciseTypeId String      @map("exercise_type_id")
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  @@map("exercises")
  @@index([exerciseTypeId])
}

model ExerciseTypeGroup {
  id          String   @id @default(uuid())
  slug        String   @unique
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  translations    ExerciseTypeGroupTranslation[]
  exerciseTypes   ExerciseTypeGroupMember[]

  @@map("exercise_type_groups")
}

model ExerciseTypeGroupTranslation {
  id          String             @id @default(uuid())
  group       ExerciseTypeGroup  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId     String             @map("group_id")
  language    String
  name        String
  description String?
  createdAt   DateTime           @default(now()) @map("created_at")
  updatedAt   DateTime           @updatedAt @map("updated_at")

  @@map("exercise_type_group_translations")
  @@unique([groupId, language])
  @@index([language])
}

model ExerciseTypeGroupMember {
  id              String            @id @default(uuid())
  group           ExerciseTypeGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId         String            @map("group_id")
  exerciseType    ExerciseType      @relation(fields: [exerciseTypeId], references: [id], onDelete: Cascade)
  exerciseTypeId  String            @map("exercise_type_id")
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @updatedAt @map("updated_at")

  @@map("exercise_type_group_members")
  @@unique([groupId, exerciseTypeId])
  @@index([groupId])
  @@index([exerciseTypeId])
}

model Section {
  id          String   @id @default(uuid())
  slug        String   @unique
  order       Int
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  translations        SectionTranslation[]
  durationConfigs     SectionDurationConfig[]
  exerciseTypeLinks   SectionExerciseType[]
  sessionItems        PracticeSessionSectionItem[]

  @@map("sections")
  @@index([order])
}

model SectionTranslation {
  id          String   @id @default(uuid())
  section     Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId   String   @map("section_id")
  language    String
  name        String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("section_translations")
  @@unique([sectionId, language])
  @@index([language])
}

model SectionDurationConfig {
  id              String   @id @default(uuid())
  section         Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId       String   @map("section_id")
  sessionLength   Int
  duration        Int
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("section_duration_configs")
  @@unique([sectionId, sessionLength])
  @@index([sessionLength])
}

model SectionExerciseType {
  id              String       @id @default(uuid())
  section         Section      @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId       String       @map("section_id")
  exerciseType    ExerciseType @relation(fields: [exerciseTypeId], references: [id], onDelete: Cascade)
  exerciseTypeId  String       @map("exercise_type_id")
  createdAt       DateTime     @default(now()) @map("created_at")
  updatedAt       DateTime     @updatedAt @map("updated_at")

  @@map("section_exercise_types")
  @@unique([sectionId, exerciseTypeId])
  @@index([sectionId])
  @@index([exerciseTypeId])
}

model PracticeSession {
  id            String   @id @default(uuid())
  slug          String   @unique
  name          String?
  description   String?  @db.Text
  sessionLength Int
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  sectionItems  PracticeSessionSectionItem[]

  @@map("practice_sessions")
}

model PracticeSessionSectionItem {
  id                String          @id @default(uuid())
  practiceSession   PracticeSession @relation(fields: [practiceSessionId], references: [id], onDelete: Cascade)
  practiceSessionId String          @map("practice_session_id")
  section           Section         @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId         String          @map("section_id")
  exerciseType      ExerciseType    @relation(fields: [exerciseTypeId], references: [id], onDelete: Cascade)
  exerciseTypeId    String          @map("exercise_type_id")
  order             Int
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @updatedAt @map("updated_at")

  @@map("practice_session_section_items")
  @@unique([practiceSessionId, sectionId, exerciseTypeId])
  @@index([practiceSessionId])
  @@index([sectionId])
  @@index([exerciseTypeId])
}